name: Test of dotnet setup task

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
        #   ref: 55a6f573538af2ab64cef51f3c6a700eca728498
            
      - run: dotnet --info

      # - name: Set dotnet install dir (Ubuntu)
      #   if: runner.os == 'Linux'
      #   run: echo "DOTNET_INSTALL_DIR=/usr/share/dotnet" >> $GITHUB_ENV
      
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.*

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.*
          # source-url: https://api.nuget.org/v3/index.json
        #   source-url: https://nuget.pkg.github.com/vsafonkin/index.json
        # env:
        #   NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: dotnet --info

      # - run: dotnet new globaljson --sdk-version "3.1.406"

      # - run: dotnet --version

      # - name: global json
      #   shell: pwsh
      #   run: Get-Content global.json

      # - name: Nuget.config
      #   shell: pwsh
      #   run: Get-Content '../nuget.config'

      # - name: Create nuget package
      #   run: dotnet pack --configuration Release dotnet-setup-test.csproj

      # - name: Publish nuget package
      #   run: |
      #     dotnet nuget push bin/Release/*.nupkg